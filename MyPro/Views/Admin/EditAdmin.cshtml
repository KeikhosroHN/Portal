@model MyPro.Models.Admin

@{
    ViewBag.Title = "ویرایش حساب مدیر";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ویرایش حساب مدیر</h2>


@using (Html.BeginForm("EditAdmin", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>مدیر</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if ((string)Session["Access"] == "MainAdmin")
        {

            <div class="form-group">
                @Html.LabelFor(model => model.Access, htmlAttributes: new { @class = "control-label col-md-2", style = "float:right" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Access, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Access, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2", style = "float:right" })
            <div class="col-md-10">
                <input type="text" name="User" value="@Model.Username" hidden />
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", style = "float:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", style = "float:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2", style = "float:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2", style = "float:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2", style = "float:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class=" col-md-10">
                <input type="submit" value="ذخیره تغییرات" class="btn btn-success btn-outline" />
                <a class="btn btn-danger btn-outline" href="@Url.Action("AdminsList","Admin")">بازگشت به لیست</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
